variables:
  DEBIAN_FRONTEND: noninteractive
  APT_GET_INSTALL: "apt-get install --no-install-recommends -q -y"

stages:
  - check_coding_style
  - test_build
  - deploy

arduino-lint:
  stage: check_coding_style
  image:
    # https://hub.docker.com/_/debian
    name: debian:latest
  script:
    - date
    - apt-get update
    - $APT_GET_INSTALL curl ca-certificates
    - (cd && curl -fsSL https://raw.githubusercontent.com/arduino/arduino-lint/main/etc/install.sh | sh)
    - ~/bin/arduino-lint --version
    - ~/bin/arduino-lint --compliance strict --library-manager submit
    #- ~/bin/arduino-lint --compliance strict --library-manager update

arduino_ci:
  stage: test_build
  image:
    # https://hub.docker.com/_/ubuntu
    name: ubuntu:18.04
  script:
    - date
    - apt-get update
    - $APT_GET_INSTALL ruby build-essential
    - gem install arduino_ci
    - arduino_ci.rb --skip-unittests

deploy_to_github:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - apk add --no-cache git openssh
    - mkdir ~/.ssh && chmod 700 ~/.ssh
    - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
    - mv $github_deploy_key ~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
    - repopath=$(mktemp -d)
    - git clone --bare --mirror ${CI_REPOSITORY_URL} $repopath
    - (cd $repopath && git push --prune --mirror git@github.com:ug-cp/fast_samd21_tc.git)

deploy_to_repo:
  stage: deploy
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - apk add --no-cache git
    - repopath=$(mktemp -d)
    - git clone --bare --mirror ${CI_REPOSITORY_URL} $repopath
    - (cd $repopath && git push --prune --mirror $backup_repo)
